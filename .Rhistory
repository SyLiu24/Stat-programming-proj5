a()
b=1
a<-function(){
# k=function() b
# k()
b
}
a()
b=3
a<-function(){
# k=function() b
# k()
b
}
a()
(1<3 & (1>3 | 1>0))
(1<3 & 1>3 | 1>0)
?logical
(1<3 | 1>3 & 1>0)
(1<3 | (1>3 & 1>0))
1<3 | (1>3 & 1>3)
1<3 | 1>3 & 1>3
(1<3 | 1>3) & 1>3
a=matrix(1:4,2,2)
a
chol(a)
(inherits(try(chol(a)),silent=TRUE),"try-error")
inherits(try(chol(a),silent=TRUE),"try-error")
diag(a) <- diag(a)+1
a
?backsolve
a
any(a>2)
is.infinite()
?is.infinite
b=-Inf
is.infinite(b)
b/,0
b<0
Inf>3
-Inf>3
1/0
log(0)
abs(c(-1,-2))
diag(3)
a<-function(b=1){
warning("b")
b
}
a()
a<-function(b=1){
stop("b")
b
}
a()
source("D:/Edinburgh/Statistical Programming/hw4/proj4.R")
source("D:/Edinburgh/Statistical Programming/hw4/proj4.R")
source("D:/Edinburgh/Statistical Programming/hw4/proj4.R")
source("D:/Edinburgh/Statistical Programming/hw4/proj4.R")
newt(c(0,0),rb,gb,hb,k=2)
source("D:/Edinburgh/Statistical Programming/hw4/proj4.R")
newt(c(0,0),rb,gb,hb,k=2)
newt(c(0,1),rb,gb,hb,k=2)
newt(c(1,0),rb,gb,hb,k=2)
newt(c(1,1),rb,gb,hb,k=2)
source("D:/Edinburgh/Statistical Programming/hw4/proj4.R")
newt(c(1,1),rb,gb,hb,k=2)
newt(c(1,0),rb,gb,hb,k=2)
source("D:/Edinburgh/Statistical Programming/hw4/proj4.R")
newt(c(1,0),rb,gb,hb,k=2)
newt(c(1,1),rb,gb,hb,k=2)
newt(c(1,1),rb,gb,k=2)
newt(c(1,1),rb,gb,hb=NULL,k=2)
newt(c(1,1),rb,gb,hess=NULL,k=2)
source("D:/Edinburgh/Statistical Programming/hw4/proj4.R")
source("D:/Edinburgh/Statistical Programming/hw4/proj4.R")
newt(c(1,1),rb,gb,hess=NULL,k=2)
source("D:/Edinburgh/Statistical Programming/hw4/proj4.R")
newt(c(1,1),rb,gb,hess=NULL,k=2)
newt(c(1,1),rb,gb,k=2)
newt(c(1,0),rb,gb,k=2)
newt(c(0,0),rb,gb,k=2)
newt(c(0,0),rb,gb,k=3)
newt(c(0,1),rb,gb,k=3)
source("D:/Edinburgh/Statistical Programming/hw4/proj4.R")
system.time(newt(c(0,0),rb,gb,k=3))
system.time(for i in 1:100000 newt(c(0,0),rb,gb,k=3))
system.time(for (i) in 1:100000 newt(c(0,0),rb,gb,k=3))
system.time(for (i in 1:100000) newt(c(0,0),rb,gb,k=3))
system.time(for (i in 1:1000) newt(c(0,0),rb,gb,k=3))
system.time(for (i in 1:1000) newt1(c(0,0),rb,gb,k=3))
system.time(for (i in 1:1000) newt(c(0,0),rb,gb,k=3))
system.time(for (i in 1:1000) newt1(c(0,0),rb,gb,k=3))
system.time(for (i in 1:1000) newt1(c(0,0),rb,gb,k=3))
system.time(for (i in 1:1000) newt(c(0,0),rb,gb,k=3))
system.time(for (i in 1:1000) newt1(c(0,0),rb,gb,k=3))
system.time(for (i in 1:1000) newt(c(0,0),rb,gb,k=3))
source("D:/Edinburgh/Statistical Programming/hw4/proj4.R")
source("D:/Edinburgh/Statistical Programming/hw4/proj4.R")
newt1(c(0,0),rb,gb,k=3)
newt1(c(0,0),rb,gb,k=2)
newt(c(0,0),rb,gb,k=2)
source("D:/Edinburgh/Statistical Programming/hw4/proj4.R")
newt1(c(0,0),rb,gb,k=2)
source("D:/Edinburgh/Statistical Programming/hw4/proj4.R")
newt1(c(0,0),rb,gb,k=2)
newt(c(0,0),rb,gb,k=2)
source("D:/Edinburgh/Statistical Programming/hw4/proj4.R")
newt1(c(0,0),rb,gb,k=2)
source("D:/Edinburgh/Statistical Programming/hw4/proj4.R")
newt1(c(0,0),rb,gb,k=2)
newt(c(0,0),rb,gb,k=2)
system.time(for (i in 1:1000) newt(c(0,0),rb,gb,k=2))
system.time(for (i in 1:1000) newt1(c(0,0),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(0,0),rb,gb,k=2))
system.time(for (i in 1:1000) newt1(c(0,0),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(0,0),rb,gb,k=2))
system.time(for (i in 1:1000) newt1(c(0,0),rb,gb,k=2))
system.time(for (i in 1:1000) newt1(c(0,0),rb,gb,k=2))
system.time(for (i in 1:1000) newt1(c(0,0),rb,gb,k=2))
system.time(for (i in 1:1000) newt1(c(0,0),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(0,0),rb,gb,k=2))
system.time(for (i in 1:1000) newt1(c(0,0),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(0,0),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(0,0),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(0,0),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(2,2),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(2,1.5),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(2,1.5),rb,gb,k=2))
system.time(for (i in 1:1000) newt1(c(2,1.5),rb,gb,k=2))
system.time(for (i in 1:1000) newt1(c(2,1.5),rb,gb,k=2))
system.time(for (i in 1:1000) newt1(c(2,1.5),rb,gb,k=2))
system.time(for (i in 1:1000) newt1(c(2,1.5),rb,gb,k=2))
system.time(for (i in 1:1000) newt1(c(2,1.5),rb,gb,k=2))
system.time(for (i in 1:1000) newt1(c(2,1.5),rb,gb,k=2))
system.time(for (i in 1:1000) newt1(c(2,1.5),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(2,1.5),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(2,1.5),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(2,1.5),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(2,1.5),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(2,1.5),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(2,1.5),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(2,1.5),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(2,1.5),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(2,1.5),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(2,1.5),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(2.3,1.4),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(2.3,1.4),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(2.3,1.4),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(2.3,1.4),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(2.3,1.4),rb,gb,k=2))
system.time(for (i in 1:1000) newt1(c(2.3,1.4),rb,gb,k=2))
system.time(for (i in 1:1000) newt1(c(2.3,1.4),rb,gb,k=2))
system.time(for (i in 1:1000) newt1(c(2.3,1.4),rb,gb,k=2))
system.time(for (i in 1:1000) newt1(c(2.3,1.4),rb,gb,k=2))
system.time(for (i in 1:1000) newt1(c(2.3,1.4),rb,gb,k=2))
system.time(for (i in 1:1000) newt1(c(2.3,1.4),rb,gb,k=2))
system.time(for (i in 1:1000) newt1(c(2.3,1.4),rb,gb,k=2))
system.time(for (i in 1:1000) newt1(c(2.3,1.4),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(2.3,1.4),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(2.3,1.4),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(2.3,1.4),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(2.3,1.4),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(2.3,1.4),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(2.3,1.4),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(2.3,1.4),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(10,10),rb,gb,k=2))
system.time(for (i in 1:1000) newt1(c(10,10),rb,gb,k=2))
system.time(for (i in 1:1000) newt1(c(10,10),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(10,10),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(10,10),rb,gb,k=2))
system.time(for (i in 1:1000) newt1(c(10,10),rb,gb,k=2))
system.time(for (i in 1:1000) newt1(c(10,10),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(10,10),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(10,10),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(10,20),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(40,20),rb,gb,k=2))
system.time(for (i in 1:1000) newt1(c(40,20),rb,gb,k=2))
system.time(for (i in 1:1000) newt1(c(40,20),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(40,20),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(40,20),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(40,20),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(40,20),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(40,20),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(40,20),rb,gb,k=2))
system.time(for (i in 1:1000) newt1(c(40,20),rb,gb,k=2))
system.time(for (i in 1:1000) newt1(c(40,20),rb,gb,k=2))
system.time(for (i in 1:1000) newt1(c(40,20),rb,gb,k=2))
system.time(for (i in 1:1000) newt1(c(40,20),rb,gb,k=2))
system.time(for (i in 1:1000) newt1(c(40,20),rb,gb,k=2))
system.time(for (i in 1:1000) newt1(c(40,20),rb,gb,k=2))
system.time(for (i in 1:1000) newt1(c(40,20),rb,gb,k=2))
system.time(for (i in 1:1000) newt1(c(40,20),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(40,20),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(40,20),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(40,20),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(40,20),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(40,20),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(40,20),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(40,20),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(40,20),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(40,20),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(40,20),rb,gb,k=2))
system.time(for (i in 1:1000) newt(c(40,20),rb,gb,k=2))
source("D:/Edinburgh/Statistical Programming/hw4/proj4.R")
newt(c(40,20),rb,gb,k=2)
newt1(c(40,20),rb,gb,k=2)
newt1(c(0,0),rb,gb,k=2)
newt1(c(1,1),rb,gb,k=2)
?norm
a=matrix(1:4,2,2)
a
norm(a)
source("D:/Edinburgh/Statistical Programming/hw4/proj4.R")
newt1(c(1,1),rb,gb,k=2)
newt1(c(1,0),rb,gb,k=2)
source("D:/Edinburgh/Statistical Programming/hw4/proj4.R")
newt1(c(1,0),rb,gb,k=2)
source("D:/Edinburgh/Statistical Programming/hw4/proj4.R")
newt1(c(1,0),rb,gb,k=2)
source("D:/Edinburgh/Statistical Programming/hw4/proj4.R")
newt1(c(1,0),rb,gb,k=2)
source("D:/Edinburgh/Statistical Programming/hw4/proj4.R")
a
diag(a)+1
source("D:/Edinburgh/Statistical Programming/hw4/proj4.R")
newt1(c(1,0),rb,gb,k=2)
source("D:/Edinburgh/Statistical Programming/hw4/proj4.R")
newt1(c(1,0),rb,gb,k=2)
newt1(c(1,10),rb,gb,k=2)
source("D:/Edinburgh/Statistical Programming/hw4/proj4.R")
newt1(c(1,10),rb,gb,k=2)
source("D:/Edinburgh/Statistical Programming/hw4/proj4.R")
newt1(c(1,10),rb,gb,k=2)
?norm
source("D:/Edinburgh/Statistical Programming/hw4/proj4.R")
newt1(c(1,10),rb,gb,k=2)
source("D:/Edinburgh/Statistical Programming/hw4/proj4.R")
newt1(c(1,10),rb,gb,k=2)
source("D:/Edinburgh/Statistical Programming/hw4/proj4.R")
newt1(c(1,10),rb,gb,k=2)
newt1(c(10,10),rb,gb,k=2)
source("D:/Edinburgh/Statistical Programming/hw4/proj4.R")
newt1(c(10,10),rb,gb,k=2)
newt1(c(10,11),rb,gb,k=2)
source("D:/Edinburgh/Statistical Programming/hw4/proj4.R")
newt1(c(10,11),rb,gb,k=2)
newt1(c(0.1,0.1),rb,gb,k=2)
newt1(c(2,2),rb,gb,k=2)
newt1(c(2,0),rb,gb,k=2)
newt1(c(1,10),rb,gb,k=2)
a
any(a>2)
source("D:/Edinburgh/Statistical Programming/hw4/proj4.R")
newt(c(1.2,1),rb,gb,k=2)
newt(c(1,1),rb,gb,k=2)
newt(c(1.2,1),rb,gb,k=2)
?chol2inv
a=matrix(1:4,2,2)
b=t(a)+a
b
chol(b)
chol(b+1)
chol(b+10)
chol(b+100)
chol(b+0.1)
source("D:/Edinburgh/Statistical Programming/proj4/proj4.R")
newt(c(1,1.2),rb,gb,hb)
newt(c(1,12),rb,gb,hb)
b=matrix(c(0.5,1,1,2,25),2,2)
b=matrix(c(0.5,1,1,2.25),2,2)
b
chol2inv(b)
c=matrix(c(2,0,0,2),2,2)
c
chol2inv(c)
?chol2inv
chol(c)
chol2inv(chol(c))
a=matrix(1:40000,200,200)
b=t(a)%*%a
chol(b)
n=2000
a=crossprod(matrix(runif(n*n),n,n))
b=runif(n)
system.time(r=chol(a);c=backsolve(R,forwardsolve(t(R),diag(n))))
system.time({r=chol(a);c=backsolve(R,forwardsolve(t(R),diag(n)))})
system.time({r=chol(a);c=backsolve(r,forwardsolve(t(r),diag(n)))})
system.time({r=chol(a);c=chol2inv(r)})
system.time({r=chol(a);c=backsolve(r,forwardsolve(t(r),b))})
system.time({r=chol(a);c=chol2inv(r)%*%b})
source("D:/Edinburgh/Statistical Programming/proj4/proj4.R")
newt(c(1,1.2),rb,gb,hb)
newt(c(1,1),rb,gb,hb)
source("D:/Edinburgh/Statistical Programming/proj4/proj4.R")
newt(1,rb1,gb1,hb1)
source("D:/Edinburgh/Statistical Programming/proj4/proj4.R")
newt(-1,rb1,gb1,hb1)
newt(-10,rb1,gb1,hb1)
newt(1,rb1,gb1,hb1)
a=inf
a=Inf
norm(a)
source("D:/Edinburgh/Statistical Programming/proj4/proj4.R")
source("D:/Edinburgh/Statistical Programming/proj4/proj4.R")
newt(1,rb1,gb1,hb1)
newt(-11,rb1,gb1,hb1)
source("D:/Edinburgh/Statistical Programming/proj4/proj4.R")
newt(-11,rb1,gb1,hb1)
source("D:/Edinburgh/Statistical Programming/proj4/proj4.R")
newt(-11,rb1,gb1,hb1)
source("D:/Edinburgh/Statistical Programming/proj4/proj4.R")
newt(-11,rb1,gb1,hb1)
source("D:/Edinburgh/Statistical Programming/proj4/proj4.R")
newt(-11,rb1,gb1,hb1)
source("D:/Edinburgh/Statistical Programming/proj4/proj4.R")
newt(-11,rb1,gb1,hb1)
norm(-44)
norm(1)
norm(c(1))
?norm
norm(matrix(1))
?as.matrix
norm(as.matrix(1))
source("D:/Edinburgh/Statistical Programming/proj4/proj4.R")
newt(-11,rb1,gb1,hb1)
diag(as.matrix(1))
diag(1)
diag(1)=diag(1)+1
source("D:/Edinburgh/Statistical Programming/proj4/proj4.R")
newt(-11,rb1,gb1,hb1)
chol(1)
chol(-1)
source("D:/Edinburgh/Statistical Programming/proj4/proj4.R")
newt(-11,rb1,gb1,hb1)
newt(-11,rb2,gb2,hb2)
source("D:/Edinburgh/Statistical Programming/proj4/proj4.R")
newt(-11,rb2,gb2,hb2)
source("D:/Edinburgh/Statistical Programming/proj4/proj4.R")
newt(0,rb2,gb2,hb2)
newt(1,rb2,gb2,hb2)
newt(-1,rb2,gb2,hb2)
source("D:/Edinburgh/Statistical Programming/proj4/proj4.R")
newt(-1,rb2,gb2,hb2)
?sprintf
source("D:/Edinburgh/Statistical Programming/proj4/UntitledR.R")
a(1)
source("D:/Edinburgh/Statistical Programming/proj4/UntitledR.R")
a(1)
source("D:/Edinburgh/Statistical Programming/proj4/UntitledR.R")
a(1)
source("D:/Edinburgh/Statistical Programming/proj4/proj4.R")
newt(0,rb2,gb2,hb2)
?log
source("D:/Edinburgh/Statistical Programming/proj4/proj4.R")
newt(0,rb2,gb2,hb2)
source("D:/Edinburgh/Statistical Programming/proj4/proj4.R")
newt(0,rb2,gb2,hb2)
newt(1,rb2,gb2,hb2)
newt(1,rb2,gb2,hb2)
source("D:/Edinburgh/Statistical Programming/proj4/proj4.R")
newt(1,rb2,gb2,hb2)
source("D:/Edinburgh/Statistical Programming/proj4/proj4.R")
newt(1,rb2,gb2,hb2)
log(-1)
source("D:/Edinburgh/Statistical Programming/proj4/proj4.R")
newt(1,rb2,gb2,hb2)
source("D:/Edinburgh/Statistical Programming/proj4/proj4.R")
newt(3,rb2,gb2,hb2)
newt(3,rb2,gb2)
newt(3,rb1,gb1)
?dpois
source("D:/Edinburgh/Statistical Programming/proj4/UntitledR.R")
source("D:/Edinburgh/Statistical Programming/proj4/UntitledR.R")
source("D:/Edinburgh/Statistical Programming/proj4/UntitledR.R")
nll(c(1,1),1,2)
2*(log(1)+1)-exp(1)-log(2)
?log
lg(1)
log(1)
log(exp(1))
source("D:/Edinburgh/Statistical Programming/proj4/UntitledR.R")
fit
newt(c(10,.1),nll,gll,t=1:13,y=c(12,14,33,50,67,74,123,141,165,204,253,246,240))
newt(c(10,.1),nll,gll,hess=NULL,t=1:13,y=c(12,14,33,50,67,74,123,141,165,204,253,246,240))
newt(theta=c(10,.1),nll,gll,hess=NULL,t=1:13,y=c(12,14,33,50,67,74,123,141,165,204,253,246,240))
newt(theta=c(10,.1),nll,gll,hess=NULL,t=1:13,y=c(12,14,33,50,67,74,123,141,165,204,253,246,240),maxit=200)
source("D:/Edinburgh/Statistical Programming/proj4/proj4.R")
source("D:/Edinburgh/Statistical Programming/proj4/proj4.R")
source("D:/Edinburgh/Statistical Programming/proj4/proj4.R")
source("D:/Edinburgh/Statistical Programming/proj4/proj4.R")
newt(theta=c(10,.1),nll,gll,hess=NULL,t=1:13,y=c(12,14,33,50,67,74,123,141,165,204,253,246,240),maxit=200)
newt(theta=c(10,.1),nll,gll,hess=NULL,t=1:13,y=c(12,14,33,50,67,74,123,141,165,204,253,246,240),maxit=1000)
source("D:/Edinburgh/Statistical Programming/proj4/proj4.R")
source("D:/Edinburgh/Statistical Programming/proj4/UntitledR.R")
source("D:/Edinburgh/Statistical Programming/proj4/UntitledR.R")
source("D:/Edinburgh/Statistical Programming/proj4/UntitledR.R")
fit
newt(theta=c(10,.1),nll,gll,hess=NULL,t=1:13,y=c(12,14,33,50,67,74,123,141,165,204,253,246,240),maxit=1000)
source("D:/Edinburgh/Statistical Programming/proj4/UntitledR.R")
newt(theta=c(10,.1),nll,gll,hess=NULL,t=1:13,y=c(12,14,33,50,67,74,123,141,165,204,253,246,240),maxit=1000)
newt(theta=c(20,.1),nll,gll,hess=NULL,t=1:13,y=c(12,14,33,50,67,74,123,141,165,204,253,246,240),maxit=1000)
source("D:/Edinburgh/Statistical Programming/proj4/UntitledR.R")
newt(theta=c(20,.1),nll,gll,hll,t=1:13,y=c(12,14,33,50,67,74,123,141,165,204,253,246,240),maxit=1000)
source("D:/Edinburgh/Statistical Programming/proj4/UntitledR.R")
source("D:/Edinburgh/Statistical Programming/proj4/UntitledR.R")
nlm(nll2,th0,y=y,t=t)
source("D:/Edinburgh/Statistical Programming/proj4/proj4.R")
newt(theta=c(20,.1),nll,gll,hll,t=1:13,y=c(12,14,33,50,67,74,123,141,165,204,253,246,240),maxit=1000)
newt(theta=c(10,.1),nll,gll,hll,t=1:13,y=c(12,14,33,50,67,74,123,141,165,204,253,246,240),maxit=1000)
newt(theta=c(10,.1),nll,gll,hess=NULL,t=1:13,y=c(12,14,33,50,67,74,123,141,165,204,253,246,240),maxit=1000,eps=1e-7)
newt(c(10,.1),nll,gll,hess=NULL,t=1:13,y=c(12,14,33,50,67,74,123,141,165,204,253,246,240),maxit=1000,eps=1e-7)
newt(c(10,.1),nll,gll,hess=NULL,1:13,c(12,14,33,50,67,74,123,141,165,204,253,246,240),maxit=1000,eps=1e-7)
source("D:/Edinburgh/Statistical Programming/proj4/proj4.R")
newt(c(10,.1),nll,gll,hess=NULL,1:13,c(12,14,33,50,67,74,123,141,165,204,253,246,240),maxit=1000,eps=1e-7)
system.time(newt(c(10,.1),nll,gll,hess=NULL,1:13,c(12,14,33,50,67,74,123,141,165,204,253,246,240)))
system.time(newt(c(10,.1),nll,gll,hess=NULL,1:13,c(12,14,33,50,67,74,123,141,165,204,253,246,240)))
system.time(newt(c(10,.1),nll,gll,hess=NULL,1:13,c(12,14,33,50,67,74,123,141,165,204,253,246,240)))
source("D:/Edinburgh/Statistical Programming/proj4/proj4.R")
source("D:/Edinburgh/Statistical Programming/proj4/proj4.R")
source("D:/Edinburgh/Statistical Programming/proj4/test.R")
source("D:/Edinburgh/Statistical Programming/proj4/proj4.R")
source("D:/Edinburgh/Statistical Programming/proj4/test.R")
source("D:/Edinburgh/Statistical Programming/proj4/test.R")
source("D:/Edinburgh/Statistical Programming/proj4/test.R")
source("D:/Edinburgh/Statistical Programming/proj4/test.R")
newt(c(10,.1),nll,gll,hess=NULL,t,y)
fit
source("D:/Edinburgh/Statistical Programming/proj4/proj4.R")
newt(c(10,.1),nll,gll,hess=NULL,t,y)
source("D:/Edinburgh/Statistical Programming/proj4/proj4.R")
source("D:/Edinburgh/Statistical Programming/proj4/test.R")
source("D:/Edinburgh/Statistical Programming/proj4/test.R", echo=TRUE)
source("D:/Edinburgh/Statistical Programming/proj4/proj4.R", echo=TRUE)
source("D:/Edinburgh/Statistical Programming/proj4/proj4.R", echo=TRUE)
source("D:/Edinburgh/Statistical Programming/proj4/proj4.R")
source("D:/Edinburgh/Statistical Programming/proj4/test.R", echo=TRUE)
source("D:/Edinburgh/Statistical Programming/proj4/proj4.R", echo=TRUE)
source("D:/Edinburgh/Statistical Programming/proj4/test.R", echo=TRUE)
source("D:/Edinburgh/Statistical Programming/hw4/proj4 (1).R", echo=TRUE)
source("D:/Edinburgh/Statistical Programming/proj4/test.R", echo=TRUE)
newt(c(0,0),rb,gb)
newt(c(1,1),rb,gb)
newt(c(1,1),rb,gb,hb)
source("D:/Edinburgh/Statistical Programming/proj5/proj5.R")
ob_death2022 <- death$deaths[157:w22]
pre_death2022 <- predict_death(lt$fpop17, lt$mpop17,
lt$mf, lt$mm, death$d[157:w22])
ed2022_w <- ob_death2022 - pre_death2022
ed2022 <- sum(ed2022_w)
ob_death20 <- death$deaths[157:209]
pre_death20 <- predict_death(lt$fpop17, lt$mpop17,
lt$mf, lt$mm, death$d[157:209])
ed20 <- sum(ob_death20 - pre_death20)
plot(weeks, ob_death2022, ylim=c(0,max(ob_death2022,pre_death2022)),
xlab="Week", ylab="Deaths",
main=sprintf("Deaths in 2020-2022\nExcess deaths: %f (2020)\n%f (Overall)",
ed20, ed2022))
lines(weeks, pre_death2022, col="blue")
legend("topright","predicted deaths",lty=1, col="blue")
# ed2022_w <- ob_death2022 - pre_death2022
plot(weeks, cumsum(ed2022_w), xlab="Week", ylab="Cumulative excess deaths",
main="Cumulative excess deaths in 2020-2022")
lt <- read.table("lt1720uk.dat",header=TRUE)
death <- read.table("death1722uk.dat",header=TRUE)
predict_death <- function(fpop, mpop, mf, mm, d) {
# Number of weeks forward to predict
n <- length(d)
# Expected proportion dying in a week
q <- 1-exp(-rbind(mf,mm)/52)
birth <- c(fpop[1],mpop[1])
N <- rbind(fpop,mpop)
death_pre <- rep(0,n) # predicted number of deaths each week
for (week in 1:n) {
D <- d[week]*q*N
# Calculate the predicted deaths for the week
death_pre[week] <- sum(D)
# Update population
Nd <- N - D
N <- (51*Nd + cbind(birth,Nd[,-101]))/52
}
death_pre
}
d1=death$deaths[1:156]
d2=predict_death(lt$fpop17, lt$mpop17, lt$mf, lt$mm, death$d[1:156])
sum(d1-d2)
w22 <- nrow(death)
N=w22-157+1
weeks <- 1:N
ob_death2022 <- death$deaths[157:w22]
pre_death2022 <- predict_death(lt$fpop20, lt$mpop20,
lt$mf, lt$mm, death$d[157:w22])
ed2022_w <- ob_death2022 - pre_death2022
ed2022 <- sum(ed2022_w)
ob_death20 <- death$deaths[157:209]
pre_death20 <- predict_death(lt$fpop20, lt$mpop20,
lt$mf, lt$mm, death$d[157:209])
ed20 <- sum(ob_death20 - pre_death20)
plot(weeks, ob_death2022, ylim=c(0,max(ob_death2022,pre_death2022)),
xlab="Week", ylab="Deaths",
main=sprintf("Deaths in 2020-2022\nExcess deaths: %f (2020)\n%f (Overall)",
ed20, ed2022))
lines(weeks, pre_death2022, col="blue")
legend("topright","predicted deaths",lty=1, col="blue")
# ed2022_w <- ob_death2022 - pre_death2022
plot(weeks, cumsum(ed2022_w), xlab="Week", ylab="Cumulative excess deaths",
main="Cumulative excess deaths in 2020-2022")
source("D:/Edinburgh/Statistical Programming/proj5/proj5.R")
a=c(1,3,5,7)
cumsum(a)
N
plot(cumsum(ob_death20 - pre_death20))
